/*
 * This is our main _"landing page"_ for the help system in Phosphorus Five,
 * that is loaded if no default help page is explicitly requested somehow.
 *
 * This file displays the main _"index"_ help page, and such serves as a starting ground
 * for other files in the help system. The file will invoke all Active Events starting
 * with __[desktop.help-files.]__ in their names, and assume that these events are
 * returning a folder for a _"Sub section"_ of help files - This allows you to
 * _"plugin"_ your own help files section into the main core help file logic for
 * the main help file for Phosphorus Five.
 */
h2
  innerValue:
  oninit
    desktop.version
    set-widget-property:x:/../*/_event?value
      innerValue:Phosphorus Five version Phoenix {0}
        :x:/@desktop.version?value

img
  class:desktop-help-icon-image
  src:/modules/desktop/media/logo.svg

p
  innerValue:@"Welcome to the help files for Phosphorus Five. These help files can be launched from within any module, and will guide you through
standard usage of Phosphorus Five, and its modules - In addition to how to create your own apps."

p
  innerValue:@"These documentation files, are carefully created such that they should bring you up from
the point where you can barely interact with a computer, to the point of where you're a <em>'guru software developer'</em>.
If they don't, feel free to toss me an email at thomas@gaiasoul.com. If this is your first visit to Phosphorus Five,
I suggest you start out with either Hyper IDE (if you're a software developer), or Camphora Five (if you have never
created software before). If you want to dive into creating Phosphorus Five web apps yourself, you'd probably want to
start with the <em>'Hyperlambda'</em> section."

literal
  element:h4
  innerValue:Main section


/*
 * All files at "root" of help files folder.
 */
desktop.help.widgets.help-index
  folder:@DESKTOP/help-files/

literal
  element:h3
  innerValue:Modules


/*
 * Sub-sections, these are basically folders beneath the root folder of our help system.
 */
container
  element:ul
  oninit

    /*
     * Then retrieving all "help plugin folders".
     */
    .exe
      for-each:x:/../*/~desktop.help-files?value
        insert-before:x:/.
          src:x:/@_dp?value
    vocabulary:~desktop.help-files.
    for-each:x:/@vocabulary/*?value
      insert-before:x:/@.exe/0/-
        src:x:/@_dp?value
    eval:x:/@.exe

    /*
     * Looping through each folders in "/help-files/" folder.
     */
    for-each:x:/@eval/*?name

      /*
       * Verifying user has access to path.
       */
      if
        p5.auth.has-access
          path:x:/@_dp?value
          filter:p5.module
        =:bool:false
        continue

      /*
       * Figuring out filename, without extension, and removing numbering parts.
       */
      split:x:/@_dp?value
        =:/
      replace-x:x:/@split/0/-?name
        src:/[0-9]+ - /

      /*
       * Creating a list item, containing a hyperlink button, which once clicked,
       * loads and displays the specified help file.
       */
      create-widget
        parent:x:/../*/_event?value
        element:li
        widgets
          a
            href:#
            role:button
            innerValue:x:/@replace-x?value
            .folder:x:/@_dp?value
            onclick

              /*
               * Retrieving file name, loading and displaying file, by invoking common
               * widget lambda event, which does the heavy lifting for us.
               */
              get-widget-property:x:/../*/_event?value
                .folder
              desktop.help.display-file:{0}index.hl
                :x:/@get-widget-property/*/*?value

literal
  element:h3
  innerValue:Sub sections
  oninit
    whoami
    if:x:/-/*/role?value
      !=:root
      delete-widget:x:/../*/_event?value


/*
 * Sub-sections, these are basically folders beneath the root folder of our help system.
 */
container
  element:ul
  oninit

    /*
     * Retrieving all other folders in our main help folder.
     *
     * However, before we do this, we verify that user is "root".
     */
    whoami
    if:x:/-/*/role?value
      =:root

      /*
       * This is a root account, so we display sub sections.
       */
      list-folders:@DESKTOP/help-files/

      /*
       * Looping through each folders in "/help-files/" folder.
       */
      for-each:x:/@list-folders/*?name

        /*
         * Figuring out filename, without extension, and removing numbering parts.
         */
        split:x:/@_dp?value
          =:/
        replace-x:x:/@split/0/-?name
          src:/[0-9]+ - /

        /*
         * Creating a list item, containing a hyperlink button, which once clicked,
         * loads and displays the specified help file.
         */
        create-widget
          parent:x:/../*/_event?value
          element:li
          widgets
            a
              href:#
              role:button
              innerValue:x:/@replace-x?value
              .folder:x:/@_dp?value
              onclick

                /*
                 * Retrieving file name, loading and displaying file, by invoking common
                 * widget lambda event, which does the heavy lifting for us.
                 */
                get-widget-property:x:/../*/_event?value
                  .folder
                desktop.help.display-file:{0}index.hl
                  :x:/@get-widget-property/*/*?value

h3
  innerValue:Supplying a patch

p
  innerValue:@"Notice, for legal reasons I don't accept patches for Phosphorus Five. However, if you send me one or
two lines of code, or accurately describe a bug or a problem - I would be happy to assist you. I prefer accepting such requests at
the <a href=""https://github.com/polterguy/phosphorusfive"">GitHub project website</a>, for obvious reasons. It
is also extremely easy to create your own modules and plugins for Phosphorus Five, extending it, if you find
it lacking some favourite feature of yours."

p
  innerValue:For ethical reasons, I don't wrap software components or libraries that are not Open Source in nature.

h3
  innerValue:Press

p
  innerValue:@"If you want to write about Phosphorus Five for a press article, you can use the logo of
the bird, which you can find at the top of this article. You can also contact me at thomas@gaiasoul.com, if you
want to interview me for some reasons, or need additional information about the system."

div
  oninit
    if
      license.is-valid
      set-widget-property:x:/../*/_event?value
        visible:false
  widgets
    h3
      innerValue:Purchase proprietary license

    p
      innerValue:@"Although Phosphorus Five is Open Source, it features what is commonly referred to as a <em>'Dual License option'</em>.
This requires you to obtain a proprietary license to be able to (legally) create Close Source applications.
Also realise that selling licenses is my sole source of income, and my users' willingness to purchase such
licenses from me, is what makes it possible for me to continue developing Phosphorus Five, creating value for you.
Below is a button you can click to purchase a proprietary license, and such give me the monetary
means to continue my work, which is to make <em>your job easier</em>. All payments are secured by PayPal, and I provide
a 30 day money back guarantee. For quantum discounts (above 4 licenses), please contact me on thomas@gaiasoul.com.
Quantum discounts starts at 20% for 5 licenses or more. I also provide additional services for enterprises, such as
code reviews, creation of custom modules, and similar constructs - However, such services starts at a much higher entry
point than a single machine license."
    div
      class:center
      widgets
        a
          href:#
          class:jumbo-button
          onclick

            /*
             * Creating a lambda object for being evaluated on next pageload,
             * before we reload the page.
             */
            desktop.evaluate.on-next-pageload
              lambda
                desktop.help.display:@DESKTOP/help-files/index.hl
                desktop.license.check
                  force:bool:true

            /*
             * Reloading location.
             */
            p5.web.reload-location

          widgets
            span
              innerValue:Purchase license
            literal
              element:span
              class:icon-paypal

h3
  innerValue:Print documentation

p
  innerValue:@"Below is a button that will allow you to print out your documentation, containing all Markdown
files in the documentation system. Notice, this process might take some time, depending upon how much documentation
you have for your installation. This button will create a single HTML page, and open it in another tab, which you
can use to print your own PDF file, and/or dead forrest distribution of the documentation, if you wish."

div
  class:right
  widgets
    button
      class:large
      title:Prints documentation files
      innerValue:@"<span class=""icon-printer""></span>"
      onclick

        /*
         * Creating a cover widget.
         */
        create-widgets
          micro.widgets.cover:desktop-help-print-cover
            message:Please wait while I generate your documentation ...

        /*
         * Creating a timeout to make sure cover widget is displayed on client side.
         */
        micro.lambda.create-timeout
          milliseconds:1
          onfinish

            /*
             * Creates our documentation file.
             */
            try
              micro.evaluate.file:@DESKTOP/helpers/create-documentation-print.hl
            catch
              micro.windows.info:x:/@message?value
                class:micro-windows-info warning

            /*
             * Deleting cover widget, and downloading PDF.
             */
            delete-widget:desktop-help-print-cover
            p5.io.unroll-path:x:/@try/*/micro.evaluate.file?value
            p5.web.send-javascript:@"window.open('{0}');"
              :x:/@p5.io.unroll-path?value
